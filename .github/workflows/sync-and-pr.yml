name: Sync and Create PR

on:
  schedule:
     - cron: '0 0 * * *' # Runs daily at midnight UTC
  workflow_dispatch: # Allow manual triggering      

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-and-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/HassanurRasool/test_repo_1.git
          git fetch upstream
          echo "Current remotes:"
          git remote -v

      - name: Create or update sync_merge branch
        run: |
          echo "Creating or updating sync_merge branch"
          git checkout -B sync_merge origin/sync_merge || git checkout -b sync_merge
          git reset --hard origin/sync_merge || true
          git push origin sync_merge --force
          echo "Current branch:"
          git branch --show-current

      - name: Sync changes to sync-branch
        run: |
          echo "Creating sync-branch based on upstream/development"
          git checkout -b sync-branch upstream/development
          echo "Current branch:"
          git branch --show-current
          echo "Pushing sync-branch to origin (your repository)"
          git push origin sync-branch --force
          echo "Branches on origin:"
          git ls-remote --heads origin

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet origin/sync_merge...sync-branch; then
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Sync changes from upstream
          title: Sync changes from upstream
          body: |
            This PR synchronizes changes from the upstream development branch.
            
            Note: This PR may contain merge conflicts that need to be resolved manually.
          branch: sync-branch
          base: sync_merge

      - name: Check outputs
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

      - name: No changes
        if: steps.check_changes.outputs.changes != 'true'
        run: echo "No changes to commit. Skipping PR creation."
